<style lang="less">
page{
  width: 100%;
  height: 100%;
}
#getUserInfo{
  position: fixed;
  top: 0;
  width: 100% !important;
  height: 100% !important;
  padding: 0rpx !important;
  z-index: 999;
  background-color:rgba(255, 255, 255, 0);
  color: #fff;
}
.hide{
  display: none
}
.notice{
  position: fixed;
  top: 0rpx;
  width: 670rpx;
  height: 80rpx;
  line-height: 80rpx;
  border: 1rpx solid #e5e5e5;
  border-radius: 20rpx;
  background-color: #eee;
  margin: 0 20rpx;
  font-size: 20rpx;
  color: #393939;
  padding: 0 20rpx;
  z-index: 20;
}
.notice image{
  width: 30rpx;
  height: 30rpx;
}
.notice .name{
  color: #4a8dff;
}

.stepCount{
  margin-top: 50rpx;
  width: 100%;
  height: 500rpx;
  display: flex;
  align-items: center;
  justify-content: center;
}
.stepCountBg{
  width: 100%;
  height: 500rpx;
  margin-top: -500rpx;
  z-index: -10;
}
// .stepCount image{
//   width: 100%;
//   height: 100%;
//   z-index: -10;
// }
.stepCountInfo{
  text-align: center;
  overflow:hidden;
  margin: 0 auto;
  width: 340rpx;
  height: 340rpx;
  border-radius: 170rpx;
  border: 1rpx solid #f5b859;
  background-color: #fff;
  z-index: 10;
}

.stepCountTitle{
  height: 100rpx;
  line-height: 100rpx;
  color: #f87b00;
  font-size: 30rpx;
  font-weight: 600;
}
.stepCountCon{
  height: 140rpx;
  line-height: 100rpx;
  color: #1b1b1b;
  font-size: 80rpx;
}
.stepCountPrompt{
  height: 100rpx;
  color: #7e7e7e;
  font-size: 30rpx;
}

.stepPrompt{
  width: 486rpx;
  height: 100rpx;
  line-height: 100rpx;
  font-size: 28rpx;
  color: #777;
  text-align: center;
  border-bottom: 1rpx solid #e5e5e5;
  margin: 0 auto;
  margin-top: -50rpx;
  z-index: 10;
}
.operateButton{
  width: 100%;
  height: 160rpx;
  border-bottom: 1rpx solid #e5e5e5;
  display: flex;
  align-items: center;
  justify-content: center;
}
.operateButton view{
  width: 260rpx;
  height: 60rpx;
  line-height: 60rpx;
  border-radius: 30rpx;
  text-align: center;
  color: #fff;
  background-color: #f39900;
  margin:  0 20rpx;
}
.listTitle{
  margin-top: 60rpx; 
  width: 100%;
  height: 80rpx;
  line-height: 80rpx;
  font-size: 30rpx;
  padding: 0 40rpx;
  background-color: #eeeeee;
  color: #010101;
}

.commodityList{
  margin-top: 25rpx;
  margin-bottom: 130rpx;
  word-wrap: break-word;
  display: inline-block;
}
.commodity{
  display:inline-block;
  margin-top: 44rpx;
  width: 316rpx;
  height: 530rpx;
  border: 1rpx solid #eee;
  border-radius: 30rpx;
  margin: 28rpx;
}
.commodityImg{
  width: 100%;
  height: 350rpx;
}
.commodityInfo{
  padding: 0 20rpx;
  border-top: 1rpx solid #eee;
}
.commodityTitle{
  height: 70rpx;
  line-height: 70rpx;
  font-size: 26rpx;
  color: #333;
}
.commodityLave{
  font-size: 20rpx;
  color: #333;
}
.commodityInfo .info{
  display: flex;
  align-items: center;
  justify-content: center;
  height: 80rpx;
}
.beans,.operating{
  width: 50%;
  font-size: 25rpx;
  color: #ff6101;
  display: flex;
  align-items: center;
  justify-content: center;
}
.commodityInfo image{
  width: 30rpx;
  height: 30rpx;
  margin-right: 10rpx;
}
.operating view{
  width: 70rpx;
  height: 35rpx;
  background-color: #ff6101;
  color: #fff;
  text-align: center;
  border-radius: 10rpx;
}
</style>
<template>
  <view>
    <!-- 信息通知栏 -->
    <view class="notice">
      <image src="/img/notice.png" />
      提示信息
      <text class="name">名字名字</text>
      提示信息提示信息
    </view>
    <!-- 步数显示块 -->
    <view class="stepCount">
      <view class="stepCountInfo">
        <view class="stepCountTitle">进入步数</view>
        <view class="stepCountCon">{{todayStep}}</view>
        <view class="stepCountPrompt">每日24点清零</view>
      </view>
    </view>
    <image class="stepCountBg" src="/img/homeBg.png" />
    <view class="stepPrompt" @tap="goDonationList">今日的公益金额已对完,明天早点来哦!</view>
    <!-- 操作按钮 -->
    <view class="operateButton">
      <view @tap="goExchange">兑换活力豆</view>
      <view @tap="goLeaderboard">好友排行榜</view>
    </view>
    <!-- 商品列表标题 -->
    <view class="listTitle">热门商品兑换</view>
    <!-- 商品列表 -->
    <view class="commodityList">
      <block wx:for="{{commodityList}}" key="index" index="index" item="item">
        <view class="commodity" data-id="{{item.id}}" @tap="goCommodity">
          <image class="commodityImg" src="{{item.img}}" />
          <view class="commodityInfo">
            <view class="commodityTitle">{{item.name}}</view>
            <view class="commodityLave">剩余{{item.cost_beans}}件</view>
            <view class="info">
              <view class="beans">
                <image src="/img/beans3.png" />
                {{item.price}}
              </view>
              <view class="operating">
                <image src="/img/setCart.png" />
                <view>兑换</view>
              </view>
            </view>
          </view>
        </view>
      </block> 
      <view class="dataNullTitle" wx:if="{{commodityList.length==0}}">暂无列表数据</view>
    </view>
    <!-- 授权按钮部分 -->
    <view>
      <button open-type="getUserInfo" wx:if="{{authorizationButton}}" id='getUserInfo' lang="zh_CN" @getuserinfo="onGotUserInfo">{{time}}</button>
    </view>
    <nav @childFn.user="goPage" />
  </view>
</template>


// customData = {}  // 自定义数据
// customFunction ()　{}  // 自定义方法
// onLoad () {}  // 在Page和Component共用的生命周期函数
// onShow () {}  // 只在Page中存在的页面生命周期函数
// config = {};  // 只在Page实例中存在的配置数据，对应于原生的page.json文件
// data = {};  // 页面所需数据均需在这里声明，可用于模板数据绑定
// components = {};  // 声明页面中所引用的组件，或声明组件中所引用的子组件
// mixins = [];  // 声明页面所引用的Mixin实例
// computed = {};  // 声明计算属性（详见后文介绍）
// watch = {};  // 声明数据watcher（详见后文介绍）
// methods = {};  // 声明页面wxml中标签的事件处理函数。注意，此处只用于声明页面wxml中标签的bind、catch事件，自定义方法需以自定义方法的方式声明
// 普通自定义方法在methods对象外声明，与methods平级
// events = {};  // 声明组件之间的事件处理函数
//props  {传值}  在WePY中属于  父子组件之间  传值的一种机制

// 页面跳转，传参写法
// this.$redirect('./page2', {a: 1, b: 2})
// this.$redirect({
//   url: './pages?a=1&b=2'
// });
// this.$navigate(url)


  // 水平垂直居中
  // display: flex;
  // align-items: center;
  // justify-content: center;

  // 居右
  // flex-direction:row;
  // justify-content:flex-end

// vertical-align:middle;

  // overflow:hidden;
  // text-overflow:ellipsis;
  // white-space:nowrap;

  // 自动换行
  // word-break:break-all;

  // overflow:hidden;
  // text-overflow:ellipsis;
  // white-space:nowrap;
<script>
import wepy from 'wepy'
import nav from '../components/nav' // 底部导航
export default class Index extends wepy.page {
  config = {
    'navigationBarTitleText': '首页'
  };
  // 生命组件ID
  components = {
    // 底部导航
    nav: nav
  };
  // alias example
  data = {
    userInfo: null,
    userDetailed: null,
    openId: null,
    authorizationButton: true,
    nextUrl: '',
    commodityList: [],
    encryptedData: null,
    iv: null,
    code: null,
    todayStep: 0,
    inviteUserId: null
  };

  methods = {
    // 底部导航跳转
    goPage (url, evt) {
      // 销毁当前页{跳转}
      this.$redirect(url)
    },
    // 拨打商家电话
    dialPhone() {
      if (this.phone) {
        wx.makePhoneCall({
          phoneNumber: this.phone,
          success: function () {
            console.log('拨打电话成功！')
          },
          fail: function () {
            console.log('拨打电话失败！')
          }
        })
      }
    }
  };
  async onGotUserInfo() {
    // 获取用户信息
    this.userInfo = await wepy.getUserInfo()
    this.userInfo = this.userInfo.rawData
    // 判断用户信息是否为空
    if (this.userInfo) {
      this.authorizationButton = false
      // 数据生效
      this.$apply()
      // 将用户信息字符串转换为josn
      this.userInfo = JSON.parse(this.userInfo)
      // 提交用户信息
      this.setUserInfo(this.userInfo)
      // 登陆
      this.userLogin(this.userInfo)
      this.$parent.globalData.userInfo = this.userInfo
      this.$apply()
      // 获取运动步数
      this.getRunData()
      
    }
  }
  // 提交用户信息
  async setUserInfo(userInfo) {
    if (this.openId) {
      return
    }
    // 从组件中获取userInfo
    await wepy.login().then(res => {
      this.code = res.code
    })
    // 发送请求,存储用户信息
    await wx.request({
      url: `${this.$parent.globalData.requestUrl}/api/userLogin`,
      method: 'POST',
      data: {
        code: this.code,
        name: this.userInfo.nickName,
        profile: this.userInfo.avatarUrl,
        recommender_id: this.inviteUserId
      },
      success: function (data) {
        if (data.data.success) {
          // 获取用户信息,及openID  并存入全局
          this.userInfo = data.data.data.user
          this.openId = this.userInfo.open_id
          this.$parent.globalData.userInfo = this.userInfo
          this.$parent.globalData.openId = this.openId
          this.$apply()
        }
      }
    })
  }
  /**
   * onLoad
   */
  async onLoad(options) {
    if (options.userId) {
      // 此处请求接口，为分享功能辅助，添加活力豆
      this.inviteUserId = options.userId
    }
    this.onGotUserInfo()
    // 获取热门推荐商品列表
    wx.request({
      url: `${this.$parent.globalData.requestUrl}/api/hotGood`,
      method: 'GET',
      data: {},
      success: data => {
        if (data.data.success) {
          data = data.data.data.goods
          this.commodityList = data.data
          // 获取下一页的请求Id
          if (data.meta.pagination.links.length !== 0) {
            this.nextUrl = data.meta.pagination.links.next
          }
          this.$apply()
        }
      }
    })
  }
  // 获取步数
  getRunData() {
    wx.getWeRunData({
      success: res => {
        let encryptedData = res.encryptedData
        let iv = res.iv
        wepy.login().then(res => {
          let code = res.code
          // 提交步数(未解密)
          wx.request({
            url: `${this.$parent.globalData.requestUrl}/api/getStepInformation`,
            method: 'POST',
            header: {
              AuthrizeOpenId: this.$parent.globalData.openId
            },
            data: {
              code: code,
              encryptedData: encryptedData,
              iv: iv
            },
            success: data => {
              if (data.data.success) {
                this.todayStep = data.data.data.today_step
                this.$parent.globalData.todayStep = this.todayStep
                this.$apply()
              }
            }
          })
        })
      }
    })
  }
  onShow() {
    // 获取用户详情信息
    this.getUserDetailed()
  }
  // 用户登陆
  async userLogin(userInfo) {
    // 从组件中获取userInfo
    await wepy.login().then(res => {
      this.code = res.code
    })
    // 发送请求,存储用户信息
    await wx.request({
      url: `${this.$parent.globalData.requestUrl}/api/userLogin`,
      method: 'POST',
      data: {
        code: this.code,
        name: this.userInfo.nickName,
        profile: this.userInfo.avatarUrl
      },
      success: data => {
        if (data.data.success) {
          // 获取用户信息,及openID  并存入全局
          this.userInfo = data.data.data.user
          this.openId = this.userInfo.open_id
          this.$parent.globalData.userInfo = this.userInfo
          this.$parent.globalData.openId = this.openId
          this.$apply()
          // 获取用户详情信息
          this.getUserDetailed()
        }
      }
    })
  }
  onLaunch() {};
  /**
   * 页面上拉触底事件的处理函数
   */
  async onReachBottom() {
    if (!this.nextUrl) {
      this.prompt = false
      this.$apply()
      return
    }
    await wepy.login().then(res => {
      this.code = res.code
    })
    await wx.request({
      url: this.nextUrl,
      method: 'GET',
      data: {
        code: this.code
      },
      success: data => {
        if (data.data.success) {
          data = data.data.data.goods
          let commodityList = data.data
          // 将新的请求结果加入原有数组  concat连接两个或更多的数组，并返回结果。
          this.commodityList = this.commodityList.concat(commodityList)
          // 更新下一页请求地址
          // 获取下一页的请求Id
          this.nextUrl = ''
          if (data.meta.pagination.links.length !== 0) {
            this.nextUrl = data.meta.pagination.links.next
          }
          this.$apply()
        }
      }
    })
  }
  // 获取用户详情信息
  getUserDetailed() {
    // if (this.$parent.globalData.openId) {
    //   return
    // }
    wx.request({
      url: `${this.$parent.globalData.requestUrl}/api/userInformation`,
      method: 'GET',
      header: {
        AuthrizeOpenId: this.$parent.globalData.openId
      },
      success: data => {
        console.log(data)
        if (data.data.success) {
          this.userDetailed = data.data.data
          this.$parent.globalData.userDetailed = this.userDetailed
          this.$apply()
        }
      }
    })
  }
  // 控制背景图大小
  autoImage(e) {
    // 获取图片的宽高
    var imgW = e.detail.width
    var imgH = e.detail.height
    // 计算图片比例
    var imgScale = imgW / imgH
    // 声明自适应宽高变量
    var autoW = ''
    var autoH = ''
    // 获取屏幕宽度，并将图片设置为屏幕等宽
    wx.getSystemInfo({
      success: res => {
        autoW = res.windowWidth
        autoH = autoW / imgScale
        this.autoW = autoW
        this.autoH = autoH
        this.$apply()
      }
    })
  }
  /**
   * 进入商品详情页
   */
  goCommodity(e) {
    if (!this.openId) {
      wx.showModal({
        title: '',
        content: '请进入个人中心登陆'
      })
      return
    }
    let id = e.currentTarget.dataset.id
    this.$navigate(`/pages/commodity?id=${id}`)
  }
  /**
   * 进入好友排行榜页
   */
  goLeaderboard() {
    if (!this.openId) {
      wx.showModal({
        title: '',
        content: '请进入个人中心登陆'
      })
      return
    }
    this.$navigate('/pages/leaderboard')
  }
  // 公益捐赠列表
  goDonationList() {
    this.$navigate('/pages/donationList')
  }
  /**
   * 兑换步数
   */
  goExchange() {
    if (!this.openId) {
      wx.showModal({
        title: '',
        content: '请进入个人中心登陆'
      })
      return
    }
    if (this.todayStep === 0) {
      wx.showModal({
        title: '',
        content: '步数不足，无法兑换'
      })
      return
    }
    wx.showModal({
      title: '',
      content: `确认将${this.todayStep}步兑换为活力豆`,
      success: res => {
        if (res.cancel) {
          // 点击取消
        } else {
          // 点击确定
          wx.request({
            url: `${this.$parent.globalData.requestUrl}/api/test`,
            method: 'POST',
            data: {
              code: this.code
            },
            success: data => {
              if (data.data.success) {
                this.$apply()
              }
            }
          })
        }
      }
    })
  }
}
</script>
