<style lang="less">
page{
  background-color: #efefef;
}
.list{
  width: 750rpx;
  height: auto;
  background-color: #fff;
  display: flex;
  border-bottom: 1rpx solid #e5e5e5;
}
.listCon{
  width: 710rpx;
  height: 404rpx;
  margin: 30rpx 20rpx;
  border-radius: 20rpx;
  background-color: #eee;
  display: flex;
  // padding: 30rpx 20rpx;
}
.select, .img, .info{
  margin: 30rpx 0;
}
.select{
  width: 80rpx;
  display: flex;
  align-items: center;
  justify-content: center;
}
.img{
  width: 310rpx;
  height: 350rpx;
  border-radius: 20rpx;
}
.info{
  width: 260rpx;
  margin-left: 44rpx;
  position: relative;
}
.listCon image{
  width: 100%;
  height: 100%;
  border-radius: 20rpx;
}
.info view:nth-child(1){
  
}
.info view:nth-child(2){
  width: 100%;
  height: auto;
  color: #333;
  word-break:break-all;
  display:table-cell;
  vertical-align:middle
}
.info view:nth-child(3){
  position: absolute;
  bottom: 0rpx;
  right: 0rpx;
  display: flex;
}
.info view:nth-child(3) view{
  position: relative;
  // min-width: 40rpx;
  // height: 40rpx;
  // line-height: 40rpx;
  margin-left: 15rpx;
  border: 1rpx solid #9d9d9d;
  font-size: 25rpx;
  text-align: center;
  padding:5rpx 10rpx;
  min-width: 18rpx;
}
.info .delete{
  position: absolute;
  top: 0rpx;
  right: 0rpx;
  color: #555;
}
// .infoShow view:nth-child(1){
//   width:100%;
//   height:auto;
//   color:#333;
//   word-break:break-all;
//   display:flex;
//   align-items:center;
//   justify-content:center;

// }
.info image{
  width: 30rpx;
  height: 30rpx;
  margin-right:10rpx; 
}
.infoCon{
  height:350rpx !important;
}
.infoCon view{
  display: flex;
  align-items: center;
}
.infoCon view:nth-child(1){
  font-size: 30rpx;
  color: #fa0100;
}
.infoCon view:nth-child(2){
  font-size: 28rpx;
  color: #444;
}
  


.selected{
  width: 750rpx;
  height: 300rpx;
  display: flex;
  background-color: #fff;
  margin-bottom: 110rpx;
}
.count{
  width: 315rpx;
  height: 300rpx;
  line-height: 300rpx;
  margin-left: 60rpx;
}
.assets{
  width: 355rpx;
  height: 300rpx;
  margin-right: 20rpx;
}
.surplus{
  height: 120rpx;
  line-height: 120rpx;
  width: 355rpx;
  text-align: right;
  color: #fc6800;
  font-size: 30rpx;
}
.operating{
  height: 50rpx;
  line-height: 50rpx;
  width: 355rpx;
  display: flex;
  flex-direction:row;
  justify-content:flex-end
}
.operating image{
  width: 100%;
  height: 100%;
}
.operating view:nth-child(1){
  height: 30rpx;
  width: 30rpx;
  vertical-align:middle;
}
.operating view:nth-child(2){
  width: 120rpx;
  height: 50rpx;
  line-height: 50rpx;
  color: #fe5600;
  padding-left: 12rpx;
}
.operating view:nth-child(3){
  text-align: center;
  color: #fff;
  font-size: 30rpx;
  height: 50rpx;
  line-height: 50rpx;
  width: 120rpx;
  background-color: #fe5600;
  border-radius: 10rpx;
}
checkbox .wx-checkbox-input{
   border-radius: 50%;/* 圆角 */
   width: 40rpx; /* 背景的宽 */
   height: 40rpx; /* 背景的高 */
}
checkbox .wx-checkbox-input.wx-checkbox-input-checked{
   border: none;
   background: #fc6800;
}
checkbox .wx-checkbox-input.wx-checkbox-input-checked::before{
   border-radius: 50%;/* 圆角 */
   width: 40rpx;/* 选中后对勾大小，不要超过背景的尺寸 */
   height: 40rpx;/* 选中后对勾大小，不要超过背景的尺寸 */
   line-height: 40rpx;
   text-align: center;
   font-size:30rpx; /* 对勾大小 30rpx */
   color:#fff; /* 对勾颜色 白色 */
   background: transparent;
   transform:translate(-50%, -50%) scale(1);
   -webkit-transform:translate(-50%, -50%) scale(1);
}

</style>

<template>
  <view>
    <view class="cartList">
      <checkbox-group bindchange="selCommodity" data-index="{{index}}" data-checks="{{item.checks}}">
        <block wx:for="{{cartList}}" key="index" index="index" item="item">
          <view class="list">
            <view class="listCon">
              <view class="select">
                <checkbox data-index="{{index}}" id="2" value="{{index}}" checked="{{item.checks}}"/>
              </view>
              <view class="img">
                <image src="{{item.good_information.img}}" />
              </view>
              <view class="info">
                <view class="delete" data-id="{{item.good_id}}">×</view>
                <view class="infoCon">
                  <view>
                    <image src="/img/beans3.png" />
                    {{item.good_information.price}}
                  </view>
                  <view>
                    {{item.good_information.name}}
                  </view>
                </view>
                <view>
                  <view data-index="{{index}}" data-num="{{item.num}}" data-storage="{{item.good_information.storage}}" @tap="quantityDown">-</view>
                  <view>{{item.num}}</view>
                  <view data-index="{{index}}" data-num="{{item.num}}" data-storage="{{item.good_information.storage}}" @tap="quantityUp">+</view>
                </view>
              </view>
            </view>
          </view>
        </block> 
      </checkbox-group>
    </view>
    <view class="selected">
      <view class="count">已选：{{cartIndex.length}}</view>
      <view class="assets">
        <view class="surplus">剩余活力豆:1000</view>
        <view class="operating">
          <view>
            <image src="/img/beans3.png" />
          </view>
          <view>{{allPrice}}</view>
          <view>兑换</view>
        </view>
      </view>
    </view>
    <nav @childFn.user="goPage" />
  </view>
</template>

<script>
import wepy from 'wepy'
import nav from '../components/nav' // 底部导航
export default class Cart extends wepy.page {
  config = {
    'navigationBarTitleText': '购物车'
  };
  // 生命组件ID
  components = {
  // 底部导航
    nav: nav
  };
  // alias example
  data = {
    userInfo: null,
    cartList: null,
    cartIndex: [],
    allPrice: 0
  };

  methods = {
    // 底部导航跳转
    goPage (url, evt) {
      // 销毁当前页{跳转}
      this.$redirect(url)
    },
    quantityUp(e) {
      // 剩余商品数量
      let storage = e.currentTarget.dataset.storage
      // 商品数量
      let num = e.currentTarget.dataset.num
      // 下标
      let index = e.currentTarget.dataset.index
      if (num >= storage) {
        wx.showModal({
          title: '',
          content: '剩余商品不足'
        })
        return
      }
      this.cartList[index].num += 1
      this.$apply()
    },
    quantityDown(e) {
      // 剩余商品数量
      let storage = e.currentTarget.dataset.storage
      // 商品数量
      let num = e.currentTarget.dataset.num
      // 下标
      let index = e.currentTarget.dataset.index
      if (num === 1) {
        return
      }
      this.cartList[index].num -= 1
      this.$apply()
    },
    // 选择购物车商品,获取商品在数组中的下标
    selCommodity(e) {
      this.cartIndex = e.detail.value
      let allPrice = 0
      let index = this.cartIndex
      let allListData = this.cartList
      for (var i in index) {
        allPrice += allListData[index[i]].num * allListData[index[i]].good_information.price
      }
      this.allPrice = allPrice
    }
  };
  async onLoad(options) {
    // 获取购物车列表
    wx.request({
      url: `${this.$parent.globalData.requestUrl}/api/getShoppingCart`,
      method: 'GET',
      header: {
        AuthrizeOpenId: this.$parent.globalData.openId
      },
      success: data => {
        if (data.data.success) {
          let cart = data.data.data.shopping_cart
          this.cartList = cart.list
          console.log(this.cartList)
          this.$apply()
          // 获取下一页的请求Id
          this.nextUrl = cart.meta.pagination.links
          if (this.nextUrl.length !== 0) {
            this.nextUrl = cart.meta.pagination.links.next
          }
          
        }
      }
    })
  };
  /**
  * 删除购物车中的商品
  */
  deleteCart() {
    wx.request({
      url: `${this.$parent.globalData.requestUrl}/api/getShoppingCart`,
      method: 'DELETE',
      data: {},
      success: function (data) {
        console.log(data)
        // 获取下一页的请求Id
        // this.nextUrl = data.data.meta.pagination.links.next
      }
    })
  }
  /**
  * 兑换购物车中的商品
  */
  deleteCart() {
    wx.request({
      url: `${this.$parent.globalData.requestUrl}/api/addOrder`,
      method: 'POST',
      data: {},
      success: function (data) {
        console.log(data)
      }
    })
  }
  /**
   * 页面上拉触底事件的处理函数
   */
  async onReachBottom() {
    if (!this.nextUrl) {
      this.prompt = false
      this.$apply()
      return
    }
    await wepy.login().then(res => {
      this.code = res.code
    })
    await wx.request({
      url: this.nextUrl,
      method: 'POST',
      data: {
        code: this.code
      },
      success: data => {
        if (data.statusCode === 200) {
          let withdrawList = data.data.data
          let allTime = ''
          // 将新的请求结果加入原有数组  concat连接两个或更多的数组，并返回结果。
          this.withdrawList = this.withdrawList.concat(withdrawList)
          this.$apply()
          // 更新下一页请求地址
          this.nextUrl = data.data.meta.pagination.links.next
        }
      }
    })
  }
}
</script>
