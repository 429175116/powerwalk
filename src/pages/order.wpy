<style lang="less">
.list{
  margin-bottom: 110rpx;
  width: 750rpx;
  height: auto;
}
.listCon{
  width: 750rpx;
  height: auto;
  border-bottom: 1rpx solid #eee;
  margin-bottom: 20rpx;
}
.con{
  width: 750rpx;
  height: auto;
  background-color: #eee;
  border-radius: 30rpx;
  padding-bottom: 20rpx;
}
.orderNumber{
  padding: 0 20rpx;
  padding-top: 40rpx;
  width: 750rpx;
  height: 75rpx;
  line-height: 75rpx;
  border-bottom: 1rpx solid #d3d3d3;
  color: #333;
  font-size: 30rpx;
}
.info{
  width: 750rpx;
  height: 124rpx;
  display: flex;
  align-items: center;
  border-bottom: 1rpx solid #d3d3d3;
  position: relative;
}
.again{
  position: absolute;
  right: 20rpx;
  width: 160rpx;
  height: 60rpx;
  line-height: 60rpx;
  color: #fff;
  text-align: center;
  font-size: 30rpx;
  border-radius: 10rpx;
  background-color: #e76503;
}
.status{
  color: #333;
  font-size: 30rpx;
}
.status view{
  height: 60rpx;
  line-height: 60rpx;
  padding-left: 20rpx;
}
.status text{
  color: #f70300;
}

.infoTitle{
  width: 750rpx;
  height: 80rpx;
  line-height: 80rpx;
  padding-left: 20rpx;
  font-size: 30rpx;
  color: #333;
}
.infoTitle image{
  width: 10rpx;
  height: 20rpx;
}
.details{
  margin-top: 10rpx;
  margin: 0 30rpx;
  margin-bottom: 40rpx;
  display: flex;
}
.detailsImg{
  width: 300rpx;
  height: 356rpx;
  border-radius: 20rpx;
}
.detailsImg image{
  width: 100%;
  height: 100%;
}
.detailsInfo{
  font-size: 30rpx;
  color: #333;
  margin-left: 50rpx;
  width: 348rpx;
  word-break:break-all;
}
.detailsInfo view:nth-child(1){
  margin-top: 60rpx;
  font-size: 30rpx;
  display: flex;
  align-items: center;
}
.detailsInfo view:nth-child(1) view{
  color: #f70300;
}
.detailsInfo image{
  width: 30rpx;
  height: 30rpx;
}
.detailsCon{
  height: auto;
  max-height: 120rpx;
  margin-top: 20rpx;
  font-size: 30rpx;
  color: #333;
  overflow:hidden;
  text-overflow:ellipsis;
}
.detailsInfo view:nth-child(3){
  margin-top: 20rpx
}
</style>

<template>
  <view>
    <view class="list">
      <block wx:for="{{orderList}}" key="index" index="index" item="item">
        <view class="listCon">
          <view class="con">
            <view class="orderNumber">订单号:{{item.order_number}}</view>
            <view class="info">
              <view class="status">
                <view>
                  状态:
                  <text>{{item.status}}</text>
                </view>
                <view>总价:￥{{item.total_beans}}</view>
              </view>
              <view class="again" data-index="{{index}}" @tap="againBuy">再次购买</view>
            </view>
            <block wx:for="{{item.order_good}}" key="indexs" index="indexs" wx:for-item="sonitem">
              <view class="infoTitle" data-id="{{sonitem.id}}" @tap="goCommodity">
                {{sonitem.good.name}}
                <image src="/img/go.png" />
              </view>
              <view class="details">
                <view class="detailsImg">
                  <image src="{{sonitem.good.img}}" />
                </view>
                <view class="detailsInfo">
                  <view>
                    <image src="/img/beans3.png" />
                    <view>{{sonitem.good.cost_beans}}</view>
                  </view>
                  <view class="detailsCon">{{sonitem.good.description}}</view>
                  <view>×{{sonitem.num}}</view>
                </view>
              </view>
            </block>
          </view>
        </view>
      </block>
      <view class="dataNullTitle" wx:if="{{orderList.length==0}}">暂无列表数据</view>
    </view>
    <nav @childFn.user="goPage" />
  </view>
</template>

<script>
import wepy from 'wepy'
import nav from '../components/nav' // 底部导航
export default class Order extends wepy.page {
  config = {
    'navigationBarTitleText': '订单'
  };
  // 生命组件ID
  components = {
  // 底部导航
    nav: nav
  };
  // alias example
  data = {
    orderList: null
  };

  methods = {
  // 底部导航跳转
  goPage (url, evt) {
    // 销毁当前页{跳转}
    this.$redirect(url)
  }
  };
  async onLoad(options) {
    wx.request({
      url: `${this.$parent.globalData.requestUrl}/api/orderList`,
      method: 'GET',
      header: {
        AuthrizeOpenId: this.$parent.globalData.openId
      },
      data: {},
      success: data => {
        if (data.data.success) {
          let orders = data.data.data.orders
          this.orderList = orders.data
          // 获取下一页的请求Id
          this.nextUrl = orders.meta.pagination.links
          if (this.nextUrl.length !== 0) {
            this.nextUrl = orders.meta.pagination.links.next
          }
          this.$apply()
        }
      }
    })
  };
  /**
   * 页面上拉触底事件的处理函数
   */
  async onReachBottom() {
    if (!this.nextUrl) {
      return
    }
    await wx.request({
      url: this.nextUrl,
      method: 'GET',
      header: {
        AuthrizeOpenId: this.$parent.globalData.openId
      },
      success: data => {
        if (data.data.success) {
          let orders = data.data.data.orders
          this.orderList = orders.data
          this.orderList = this.orderList.concat(orders.data)
          // 获取下一页的请求Id
          this.nextUrl = orders.meta.pagination.links
          if (this.nextUrl.length !== 0) {
            this.nextUrl = orders.meta.pagination.links.next
          }
          this.$apply()
        }
      }
    })
  }
  // 再次购买
  againBuy(e) {
    // 获取订单列表数据数组下标
    let index = e.currentTarget.dataset.index
    let thisOrderData = this.orderList[index]
    let addssId = thisOrderData
    thisOrderData = thisOrderData.order_good
    console.log(thisOrderData);
    // let data
    for (let i in thisOrderData) {

    }
  }
  // 进入商品详情
  goCommodity(e) {
    let id = e.currentTarget.dataset.id
    this.$navigate(`/pages/commodity?id=${id}`)
  }
  exchange(){
    if (this.allPrice > this.userInfo.beans) {
      wx.showModal({
        title: '',
        content: '余额不足'
      })
      return
    }
    let addssId = this.addss.id
    let exchangeList = []
    let index = this.cartIndex
    let allListData = this.cartList
    let indexExchange = {}
    // 获取选中商品ID及数量
    for (var i in index) {
      indexExchange = {}
      indexExchange['good_id'] = allListData[index[i]].good_id
      indexExchange['num'] = allListData[index[i]].num
      exchangeList.push(indexExchange)
    }
    // 发送兑换请求
    wx.request({
      url: `${this.$parent.globalData.requestUrl}/api/addOrder`,
      method: 'POST',
      header: {
        AuthrizeOpenId: this.$parent.globalData.openId
      },
      data: {
        exchange_list: exchangeList,
        shipment_id: addssId
      },
      success: data => {
        if (data.data.success) {
          wx.showToast({
            title: '兑换成功',
            duration: 2000,
            mask: true,
            icon: 'success'
          })
          this.onLoad()
        }
      }
    })
  }
}
</script>
