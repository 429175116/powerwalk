<style lang="less">
.head{
  width: 750rpx;
  height: 310rpx;
  border-radius: 20rpx;
  background-color: #f2f2f2;
}
.head .time{
  width: 750rpx;
  height: 130rpx;
  display: flex;
  align-items: center;
  justify-content: center;
}
.head .time view:nth-child(1){
  // width: 360rpx;
  width: 210rpx;
  height: 70rpx;
  line-height: 70rpx;
  border-radius: 35rpx 0 0 35rpx;
  background-color: #fe6e00;
  color: #fff;
  text-align: right;
  font-size: 20rpx;
}
.head .time view:nth-child(2){
  // width: 360rpx;
  width: 146rpx;
  height: 70rpx;
  line-height: 70rpx;
  border-radius: 0 35rpx 35rpx 0;
  background-color: #fe6e00;
  color: #fff;
  text-align: left;
  font-size: 40rpx;
}
.grade{
  height: 80rpx;
  line-height: 80rpx;
  display: flex;
  align-items: center;
  justify-content: center;
}
.grade view{
  width: 66rpx;
  height: 66rpx;
  border-radius: 33rpx;
  border: 1rpx solid #be9002;
  display: flex;
  align-items: center;
  justify-content: center;
}
.grade view:last-of-type{
  display: none
}
.grade view:nth-child(2n) {
  width: 72rpx;
  height: 2rpx;
  background-color: #be9002;
}
.grade image{
  width: 55rpx;
  height: 55rpx;
}

.number{
  width: 750rpx;
  height: 96rpx;
  line-height: 96rpx;
  font-size: 36rpx;
  color: #333;
  text-align: center;
  display: flex;
  align-items: center;
  justify-content: center;
}
.number view:nth-child(1), .number view:nth-child(3){
  width: 310rpx;
  height: 20rpx;
}
.number view:nth-child(1){
  margin-right: 30rpx;
  border-radius: 0 10rpx 10rpx 0;
  background: -webkit-linear-gradient(left, #ffaf00 , #fe6e00);
}
.number view:nth-child(3){
  margin-left: 30rpx;
  border-radius: 10rpx 0 0 10rpx;
  background: -webkit-linear-gradient(left, #fe6e00 ,#ffaf00 );
}
.number text{
  color: #fe6e00;
}
.article{
  margin-bottom: 130rpx;
}
.articleCon{
  // line-height:55rpx;
  margin: 20rpx;
  background-color: #ece4d2;
  padding: 20rpx 0rpx;
  word-break:break-all;
  color: #333;
  font-size: 30rpx;
  border-radius: 20rpx;
}
.articleConTitle{
  height: 110rpx;
  line-height: 110rpx;
  text-align: center;
}
.select{
  margin: 50rpx 140rpx;
  width: 430rpx;
  height: 500rpx;
  background-color: #fff;
  border-radius: 20rpx;
  padding: 1rpx 0;
}
.select view{
  margin: 50rpx 64rpx;
  width: 300rpx;
  height: 60rpx;
  line-height: 60rpx;
  border: 1rpx solid #fe5600;
  border-radius: 15rpx;
  text-align: center;
  color: #333;
  overflow:hidden;
  text-overflow:ellipsis;
  white-space:nowrap;
}

.mask{
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0,0,0,0.6);
  display: flex;
  align-items: center;
  justify-content: center;
}
.comeOn, .congratulations{
  width: 710rpx;
  border-radius: 30rpx;
  background-color: #fff;
  padding: 30rpx 0;
}
.comeOn{
  height: 560rpx;
}
.comeOnTitleImg{
  margin-top: 40rpx;
  width: 100%;
  height: 120rpx;
  display: flex;
  align-items: center;
  justify-content: center;
}
.comeOnTitleImg image{
  width: 410rpx;
  height: 120rpx;
}
.comeOnCon{
  width: 100%;
  height: 70rpx;
  line-height: 70rpx;
  text-align: center;
  color: #333;
  font-size: 30rpx;
}
.comeOnConButton{
  margin-top: 60rpx;
  width: 100%;
  height: 60rpx;
  display: flex;
  align-items: center;
  justify-content: center;
}
.comeOnConButton view, .comeOnBotton view{
  width: 240rpx;
  height: 58rpx;
  line-height: 58rpx;
  border-radius: 29rpx;
  border: 1rpx solid #e6e6e6;
  text-align: center;
  color: #333;
  font-size: 30rpx;
}
.comeOnBottonImg{
  width: 100%;
  height: 320rpx;
  background: linear-gradient(#fff, #fdff0c);
  border-radius: 0 0 20rpx 20rpx;
  display: flex;
  align-items: center;
  justify-content: center;
}
.comeOnBottonImg image{
  width: 100%;
  height: 100%;
  border-radius: 0 0 40rpx 40rpx;
}

.congratulations{
  height: 570rpx;
}
.congsTitleImg{
  height: 140rpx;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}
.congsTitleImg image{
  height: 140rpx;
  width: 400rpx;
}
.congCon{
  width: 100%;
  height: 90rpx;
  line-height: 90rpx;
  text-align: center;
  font-size: 30rpx;
  color: #be9002;
}
.congCons{
  width: 100%;
  height: 130rpx;
  line-height: 130rpx;
  text-align: center;
  font-size: 30rpx;
  color: #333;
}
.comeOnBotton{
  height: 220rpx;
  width: 100%;
  border-top: 1rpx solid #eee;
  display: flex;
  align-items: center;
  justify-content: center;
}
.comeOnBotton view{
  border: 1rpx solid #f39900;
  background-color: #f39900;
  color: #fff;
}
.start{
  width: 356rpx !important;
  border-radius: 35rpx !important;
  text-align: center !important;
}
// .articleCon .action{
//   background-color: #fe5600;
//   color: #fff;
// }
// 答对状态
.articleCon .correctStatus{
  background-color: #00fe0d;
  border: 1rpx solid #00fe0d;
  color: #fff;
}
// 答错状态
.articleCon .errorStatus{
  background-color: rgb(255, 0, 0);
  border: 1rpx solid rgb(255, 0, 0);
  color: #fff;
}
</style>
<template>
  <view>
    <view class="head">
      <view class="time" wx:if="{{startStatus}}" @tap="start">
        <view>10s倒计时:</view>
        <view>{{time}}</view>
      </view>
      <view class="time" wx:if="{{!startStatus}}" @tap="start">
        <view class="start">开始答题</view>
      </view>
      <view class="grade">
        <!-- diffcultShowData -->
        <block wx:for="{{diffcultShowData}}" key="index" index="index" item="item">
          <view>
            <image src="/img/star{{item}}.png" />
          </view>
          <view></view>
        </block>
      </view>
      <view class="number">
        <view></view>
        <view><text>{{index + 1}}</text>/{{topicList.length}}</view>
        <view></view>
      </view>
    </view>
    <view class="article">
      <view class="articleCon">
        <view class="articleConTitle">{{topicList[index].description}}</view>
        <view class="select">
          <!-- errorStatus
          correctStatus -->
          <view class="{{'A' === answer?correctStatus:errorStatus}}" data-sel="A" @tap="reply">A:{{topicList[index].answer_list[0].A}}</view>
          <view class="{{'B' === answer?correctStatus:errorStatus}}" data-sel="B" @tap="reply">B:{{topicList[index].answer_list[1].B}}</view>
          <view class="{{'C' === answer?correctStatus:errorStatus}}" data-sel="C" @tap="reply">C:{{topicList[index].answer_list[2].C}}</view>
          <view class="{{'D' === answer?correctStatus:errorStatus}}" data-sel="D" @tap="reply">D:{{topicList[index].answer_list[3].D}}</view>
        </view>
      </view>
    </view>
    <view class="mask" wx:if="{{correct || error}}">
      <!-- 答错 -->
      <view class="comeOn" wx:if="{{error}}">
        <view class="comeOnTitleImg">
          <image src="/img/comeOn.png" />
        </view>
        <view class="comeOnCon">失败乃成功之母</view>
        <view class="comeOnConButton">
          <view @tap="nextQuestion">下一题</view>
        </view>
        <view  class="comeOnBottonImg">
          <image src="/img/comeOn1.png" />
        </view>
      </view>
      <!-- 答对 -->
      <view class="congratulations" wx:if="{{correct}}">
        <view class="congsTitleImg">
          <image src="/img/congratulations1.png" />
        </view>
        <view class="congCon">再接再厉</view>
        <view class="congCons">20活力豆已经发放</view>
        <view  class="comeOnBotton">
          <view @tap="nextQuestion">下一题</view>
        </view>
      </view>
    </view>
    <nav @childFn.user="goPage" />
  </view>
</template>

<script>
import wepy from 'wepy'
import nav from '../components/nav' // 底部导航
// import author from '../components/author' // 授权按钮
export default class Challenge extends wepy.page {
  config = {
    'navigationBarTitleText': '选择题'
  };
  // 生命组件ID
  components = {
  // 底部导航
    nav: nav
  };
  // alias example
  data = {
    userInfo: null,
    topicList: [],
    correct: false, // 正确
    error: false, // 错误
    index: 0, // 题目下标
    time: 10, // 定时器显示时间
    constTime: 10, // 常量时间
    startStatus: false,
    correctStatus: '', // 答对样式
    errorStatus: '', // 答错样式
    answer: '', // 答案
    diffcultShowData: '00000', // 控制题目难度等级字符串
    correctNumber: 0, // 答对题目个数
    submitStatus: false // 分数是否提交
  };

  methods = {
    // 底部导航跳转
    goPage (url, evt) {
      // 销毁当前页{跳转}
      this.$redirect(url)
    }
  };
  async onLoad(options) {
    this.userInfo = this.$parent.globalData.userInfo
    this.$apply()
    // 获取题目数据列表
    this.getTopicList()
  };
  // 开始答题
  start() {
    // 答题已开始
    if (this.startStatus) {
      return
    }
    // 答题开始状态
    this.startStatus = true
    this.$apply()
    // 启动定时器
    this.countdownTime()
  }
  // 回答题目点击选项事件
  reply(e) {
    // 判断答题是否开始答题
    if (!this.startStatus) {
      return
    }
    // 判断是否在显示对错
    if (this.ShowStatus) {
      return
    }
    // 显示对错状态判断值
    this.ShowStatus = true
    // 清理定时器
    clearInterval(this.countdown)
    // 重置时间
    // this.time = this.constTime
    // 获取点击的选项
    let selAnswer = e.currentTarget.dataset.sel
    // 获取正确答案
    let answer = this.topicList[this.index].answer
    this.answer = this.topicList[this.index].answer
    this.correctStatus = 'correctStatus' // 答对样式
    this.errorStatus = 'errorStatus' // 答错样式
    this.$apply()
    if (selAnswer === answer) {
      // 正确
      setTimeout((e) => {
        this.correct = true
        this.$apply()
      }, 2000)
      this.correctNumber += 1
    } else {
      // 错了
      setTimeout((e) => {
        this.error = true
        this.$apply()
      }, 2000)
    }
    this.$apply()
  }
  // 下一题
  nextQuestion() {
    // 清空正确错误状态
    this.correct = false
    this.error = false
    // 显示对错状态判断值
    this.ShowStatus = false
    this.correctStatus = '' // 答对样式
    this.errorStatus = '' // 答错样式
    this.$apply()
    if (this.index < this.topicList.length - 1) {
      this.index += 1
      // 获取题目难度等级，并返回控制显示的字符串
      this.getDiffcult()
      // 重置时间
      this.time = this.constTime
      // 启动定时器
      this.countdownTime()
    } else {
      wx.showModal({
        title: '',
        content: '题目已答完'
      })
      // 提交答题结果
      this.submitResult()
    }
  }
  // 倒计时
  countdownTime() {
    // 启动定时器
    this.countdown = setInterval((e) => {
      this.time -= 0.1
      this.time = this.time.toFixed(1)
      if (this.time <= 0) {
        // 清理定时器
        clearInterval(this.countdown)
        // 显示答题失败结果
        this.error = true
      }
      this.$apply()
    }, 100)
  }
  // 获取题目难度等级，并返回控制显示的字符串
  getDiffcult() {
    // 获取当前题目难度等级
    let diffcultData = this.topicList[this.index].diffcult
    let str = ''
    // 字符串拼接
    for (let i = 0; i < diffcultData; i++) {
      str += '1'
    }
    // 字符串补全
    str = str.padEnd(5, '0')
    this.diffcultShowData = str
    this.$apply()
  }
  // 提交答题结果
  submitResult() {
    // 判断成绩是否提交
    if (this.submitStatus) {
      return
    }
    this.submitStatus = true
    wx.request({
      url: `${this.$parent.globalData.requestUrl}/api/answerFeedBack`,
      method: 'POST',
      header: {
        AuthrizeOpenId: this.$parent.globalData.openId
      },
      data: {
        right_answers: this.correctNumber
      },
      success: data => {}
    })
  }
  // 获取题目数据列表
  getTopicList() {
    wx.request({
      url: `${this.$parent.globalData.requestUrl}/api/questionList`,
      method: 'GET',
      success: data => {
        if (data.data.success) {
          this.topicList = data.data.data.question_list
          // 获取题目难度等级，并返回控制显示的字符串
          this.getDiffcult()
          this.$apply()
        }
      }
    })
  }
  // 页面隐藏
  onHide() {
    // 清理定时器
    clearInterval(this.countdown)
    // 提交答题结果
    this.submitResult()
  }
  /**
  * 生命周期函数--监听页面卸载
  */
  onUnload() {
    // 清理定时器
    clearInterval(this.countdown)
    // 提交答题结果
    this.submitResult()
  }
}
</script>
